import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

/* 
1) 문제파악 
문제
예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.

크로아티아 알파벳	변경
č	c=
ć	c-
dž	dz=
đ	d-
lj	lj
nj	nj
š	s=
ž	z=
예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.

입력
첫째 줄에 최대 100글자의 단어가 주어진다. 알파벳 소문자와 '-', '='로만 이루어져 있다.

단어는 크로아티아 알파벳으로 이루어져 있다. 문제 설명의 표에 나와있는 알파벳은 변경된 형태로 입력된다.

출력
입력으로 주어진 단어가 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

2) 유추파악
특정 알파벳문자는 정해진 데이터로 변환된다. 나머지 알파벳은 그대로 출력된다.
문자열을 입력받고 문자열이 몇개의 변환된 데이터로 구성되있는지 출력한다.

3) 주요 단어 이름 선정
입력 str = input_str

4)테스트 케이스
<출력>
ljes=njak
--> 6

ddz=z=
--> 3

nljj
--> 3

c=c=
--> 2

dz=ak
--> 3

5)프로그래밍 순서
(문자열 길이 - (cnt 특정 문자 길이-1))
길이가 2인 문자열 d-,c-,c=,lj,nj,s=,z= 은 cnt+1
길이가 3인 문자열 dz= 은 cnt +2  
문자열 입력 - 문자열 길이 출력
*/

public class Main {
    public int A(String input_str){
        ArrayList<String> arrayList = new ArrayList<>();
        arrayList.add("c=");
        arrayList.add("dz=");
        arrayList.add("lj");
        arrayList.add("nj");
        arrayList.add("s=");
        arrayList.add("z=");
        arrayList.add("d-");
        arrayList.add("c-");
        int cnt = 0;
        // 길이가 2인 문자열 
        for(int i =0; i<input_str.length()-1; i++){
            String str1 = (input_str.charAt(i)+"")+(input_str.charAt(i+1)+"");
            if(arrayList.contains(str1) == true){
                cnt++;
            }
        }
        // 길이가 3인 문자열
        for(int i =0; i<input_str.length()-2; i++){
            String str2 = (input_str.charAt(i)+"")+(input_str.charAt(i+1)+"")+(input_str.charAt(i+2)+"");
            if(arrayList.contains(str2) == true){
                cnt++;
            }
        }
        int new_length = input_str.length()-cnt;

        return new_length;
    }
    public static void main(String[] args) {     
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        
        try {
            Main main = new Main();
            int new_length = main.A(br.readLine());

            bw.write(new_length+"\n");
            br.close();
            bw.flush();
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}