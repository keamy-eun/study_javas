import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

/* 
문제
알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오.

길이가 짧은 것부터
길이가 같으면 사전 순으로
입력
첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다.

출력
조건에 따라 정렬하여 단어들을 출력한다. 단, 같은 단어가 여러 번 입력된 경우에는 한 번씩만 출력한다.


2) 유추파악
첫 줄에 정수 N이 입력되고 둘째 줄부터 단어가 한줄씩 N번 입력된다
입력된 단어들을 길이순서의 오름차순으로 출력한다. 
길이가 같은경우 알파벳순으로 출력한다.

3) 주요 단어 이름 선정


4)테스트 케이스
13
but
i
wont
hesitate
no
more
no
more
it
cannot
wait
im
yours
-->
i
im
it
no
but
more
wait
wont
yours
cannot
hesitate

5)프로그래밍 순서

*/

public class Main {
    public static void main(String[] args) {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        try {
            int N = Integer.parseInt(br.readLine());
            ArrayList<String>[] strList = new ArrayList[50]; // 문자열길이 1~50가 들어갈 ArrayList 
            for(int i=0; i<50; i++){
                strList[i] = new ArrayList<>();
            }
            for(int i=0; i<N; i++){
                String str = br.readLine();
                strList[str.length()].add(str);  // 문자열의 길이를 인덱스-1로 지정해서 해달 array에 값을 넣는다
            }

            for(int i=0; i<50; i++){
                if(strList[i].size() == 0) continue;
                else if(strList[i].size() == 1) bw.write(strList[i].get(0)+"\n");
                else if(strList[i].size() > 1){
                    int cnt=1;
                    int charNum = 0;  // 0번째 인덱스 
                    ArrayList<String> list = new ArrayList<>();  // 새로운 리스트를 만들어서 삭제해나가면서 비교한다
                    for(int k = 0; k<strList[i].size(); k++){
                        list.add(strList[i].get(k));
                    }
                    while(cnt!=0){
                        cnt = 1;
                        int sameMinAski = 0; // 아스키 최소값 중복 갯수
                        int jList = 0;
                        int minAski = 200; // 아스키 최소값
                        for(int j=0; j<list.size(); j++){ // 길이가 i인 strList에서 strList[i]의 갯수만큼 반복
                            int aski = (int)list.get(j).charAt(charNum);
                            if(aski < minAski) {  // 아스키값이 아스키 최소값보다 작을때
                                minAski = aski;
                                sameMinAski = 0;
                                jList = j;
                            } else if(aski == minAski) sameMinAski ++; // 아스키 최소값과 동일할때 중복+1
                            else if(aski >minAski) list.remove(list.get(j));
                        }
                        if(sameMinAski == 0) { // 중복값 없으면 출력 후 삭제
                            bw.write(strList[i].get(jList)+"\n");
                            strList[i].remove(strList[i].get(jList));
                            charNum = 0; // 비교할 인덱스 0으로 초기화
                            minAski = 0;
                        } else {
                            charNum ++;
                            if(charNum == i) cnt = 0; // 인덱스 = 문자길이 -> loop 종료
                            else continue;
                        }
                    }
                }
            }
            
            bw.flush();
            br.close();
            bw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
}