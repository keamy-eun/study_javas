import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Collections;

/* 
문제
배열을 정렬하는 것은 쉽다. 수가 주어지면, 그 수의 각 자리수를 내림차순으로 정렬해보자.

입력
첫째 줄에 정렬하려고 하는 수 N이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이다.

출력
첫째 줄에 자리수를 내림차순으로 정렬한 수를 출력한다.

2) 유추파악
첫 줄에 수 N이 주어지고 N의 각 자리수를 내림차순으로 정렬한 수를 출력하라.

3) 주요 단어 이름 선정
입력값 : N
ArrayList : list

4)테스트 케이스
<출력>
2143
-->
4321

999998999
-->
999999998

61423
-->
64321

500613009
-->
965310000

5)프로그래밍 순서
String N 입력 - N의 각 자리수를 ArrayList에 입력 - sort(list) - 역순 출력
*/

public class Main {
    static ArrayList<Integer> list;
    static BufferedWriter bw;
    // String으로 입력된 수를 역순으로 출력하는 함수
    static void print(String N) throws IOException{
        for(int i=0; i<N.length(); i++){
            list.add(Integer.parseInt(N.charAt(i)+""));
        }
        Collections.sort(list);

        for(int i=list.size()-1; i>=0; i--){
            bw.write(list.get(i)+"");
        }
    }

	public static void main(String[] args) {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		bw = new BufferedWriter(new OutputStreamWriter(System.out));

        try {
            String N = br.readLine();
            list = new ArrayList<>();

            print(N);
            
            bw.flush();
            br.close();
            bw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
}