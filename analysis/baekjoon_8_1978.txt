import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

/* 
문제
주어진 수 N개 중에서 소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오.

입력
첫 줄에 수의 개수 N이 주어진다. N은 100이하이다. 다음으로 N개의 수가 주어지는데 수는 1,000 이하의 자연수이다.

출력
주어진 수들 중 소수의 개수를 출력한다.

2) 유추파악
테스트케이스 갯수만큼 주어진 정수 중 소수의 갯수를 출력한다

3) 주요 단어 이름 선정
소수갯수 cnt
테스트케이스갯수 input_num

4)테스트 케이스
<출력>
4
1 3 5 7
--> 3

5)프로그래밍 순서
소수를 구한다. 2, 3, 5, 7, 11, 13,17,19,23,29,31
*/

public class Main {
    // 소수 찾는 함수
        public int A(StringTokenizer st, int input_num, ArrayList arrayList){
            int cnt = 0;
            for(int i=0; i<input_num; i++){
                int a = Integer.parseInt(st.nextToken());
                if(arrayList.contains(a)) cnt++;
            }
            return cnt;
        }
        public static void main(String[] args) {     
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        try {
            int input_num = Integer.parseInt(br.readLine());
            StringTokenizer st = new StringTokenizer(br.readLine());
            ArrayList<Integer> arrayList = new ArrayList<>();

            for(int i=2; i<1001; i++){
                int num=0;
                for(int j=2; j<1001; j++){ 
                    if(j>=i)break; // 자신의 값보다 큰 값으로 나누면 break;
                    else if(num==1 || i%j==0) { // 소인수분해가 되면 num++
                        num ++; 
                        break;}                 
                }
                if(num==0) {
                    arrayList.add(i);
                }
            }
            Main main = new Main();
            int cnt = main.A(st, input_num, arrayList);

            bw.write(cnt+"\n");
            bw.flush();
            br.close();
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}